
!! this is the most correct :
https://github.com/raspberrypi/pico-sdk


note that there are 2 parts of CMake... file

one condtant top header, another is changing for each project...
see below.

--------------------- step by step

sudo apt update && sudo apt install -y cmake python3 build-essential gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib

cd ~
mkdir pico
cd pico
git clone -b master https://github.com/raspberrypi/pico-sdk.git
cd pico-sdk
git submodule update --init

export PICO_SDK_PATH=~/pico/pico-sdk

!!OR
!!export PICO_SDK_PATH="/home/ubuntu/pico/pico-sdk"

mkdir /home/ubuntu/pico/picotool
export PICOTOOL_FETCH_FROM_GIT_PATH="/home/ubuntu/pico/picotool"


===== BEFORE each session do export ...

---------------------

ubuntu@ip-172-31-43-28:~/mchf-pico-freq$ cat CMakeLists.txt 

cmake_minimum_required(VERSION 3.13...3.27)

# initialize the SDK based on PICO_SDK_PATH
# note: this must happen before project()
include(pico_sdk_import.cmake)

project(my_project)

# initialize the Raspberry Pi Pico SDK
pico_sdk_init()







# rest of your project

if (TARGET tinyusb_device)
    add_executable(hello_usb
            hello_usb.c
            )

    # pull in common dependencies
    target_link_libraries(hello_usb pico_stdlib)

    # enable usb output, disable uart output
    pico_enable_stdio_usb(hello_usb 1)
    pico_enable_stdio_uart(hello_usb 0)

    # create map/bin/hex/uf2 file etc.
    pico_add_extra_outputs(hello_usb)

    # add url via pico_set_program_url
    #example_auto_set_url(hello_usb)
elseif(PICO_ON_DEVICE)
    message("Skipping hello_usb because TinyUSB submodule is not initialized in the SDK")
endif()
